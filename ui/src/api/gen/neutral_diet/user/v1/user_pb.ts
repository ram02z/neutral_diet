// @generated by protoc-gen-es v0.5.0 with parameter "target=ts"
// @generated from file neutral_diet/user/v1/user.proto (package neutral_diet.user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Region } from "../../food/v1/region_pb.js";

/**
 * @generated from message neutral_diet.user.v1.UserSettings
 */
export class UserSettings extends Message<UserSettings> {
  /**
   * @generated from field: neutral_diet.food.v1.Region region = 1;
   */
  region?: Region;

  /**
   * @generated from field: double cf_limit = 2;
   */
  cfLimit = 0;

  /**
   * @generated from field: neutral_diet.user.v1.UserSettings.DietaryRequirement dietary_requirement = 3;
   */
  dietaryRequirement = UserSettings_DietaryRequirement.UNSPECIFIED;

  constructor(data?: PartialMessage<UserSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.user.v1.UserSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "region", kind: "message", T: Region },
    { no: 2, name: "cf_limit", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "dietary_requirement", kind: "enum", T: proto3.getEnumType(UserSettings_DietaryRequirement) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSettings {
    return new UserSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSettings {
    return new UserSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSettings {
    return new UserSettings().fromJsonString(jsonString, options);
  }

  static equals(a: UserSettings | PlainMessage<UserSettings> | undefined, b: UserSettings | PlainMessage<UserSettings> | undefined): boolean {
    return proto3.util.equals(UserSettings, a, b);
  }
}

/**
 * @generated from enum neutral_diet.user.v1.UserSettings.DietaryRequirement
 */
export enum UserSettings_DietaryRequirement {
  /**
   * @generated from enum value: DIETARY_REQUIREMENT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DIETARY_REQUIREMENT_PESCATARIAN = 1;
   */
  PESCATARIAN = 1,

  /**
   * @generated from enum value: DIETARY_REQUIREMENT_VEGETARIAN = 2;
   */
  VEGETARIAN = 2,

  /**
   * @generated from enum value: DIETARY_REQUIREMENT_VEGAN = 3;
   */
  VEGAN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(UserSettings_DietaryRequirement)
proto3.util.setEnumType(UserSettings_DietaryRequirement, "neutral_diet.user.v1.UserSettings.DietaryRequirement", [
  { no: 0, name: "DIETARY_REQUIREMENT_UNSPECIFIED" },
  { no: 1, name: "DIETARY_REQUIREMENT_PESCATARIAN" },
  { no: 2, name: "DIETARY_REQUIREMENT_VEGETARIAN" },
  { no: 3, name: "DIETARY_REQUIREMENT_VEGAN" },
]);

