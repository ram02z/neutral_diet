// @generated by protoc-gen-es v0.5.0 with parameter "target=ts"
// @generated from file neutral_diet/user/v1/food_item_log.proto (package neutral_diet.user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Date } from "./date_pb.js";

/**
 * @generated from message neutral_diet.user.v1.FoodLogItemRequest
 */
export class FoodLogItemRequest extends Message<FoodLogItemRequest> {
  /**
   * @generated from field: int32 food_item_id = 1;
   */
  foodItemId = 0;

  /**
   * @generated from field: double weight = 2;
   */
  weight = 0;

  /**
   * @generated from field: double carbon_footprint = 3;
   */
  carbonFootprint = 0;

  /**
   * @generated from field: neutral_diet.user.v1.Date date = 4;
   */
  date?: Date;

  constructor(data?: PartialMessage<FoodLogItemRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.user.v1.FoodLogItemRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "food_item_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "weight", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "carbon_footprint", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FoodLogItemRequest {
    return new FoodLogItemRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FoodLogItemRequest {
    return new FoodLogItemRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FoodLogItemRequest {
    return new FoodLogItemRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FoodLogItemRequest | PlainMessage<FoodLogItemRequest> | undefined, b: FoodLogItemRequest | PlainMessage<FoodLogItemRequest> | undefined): boolean {
    return proto3.util.equals(FoodLogItemRequest, a, b);
  }
}

/**
 * @generated from message neutral_diet.user.v1.FoodLogItemResponse
 */
export class FoodLogItemResponse extends Message<FoodLogItemResponse> {
  /**
   * @generated from field: int32 food_item_id = 1;
   */
  foodItemId = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: double weight = 3;
   */
  weight = 0;

  /**
   * @generated from field: double carbon_footprint = 4;
   */
  carbonFootprint = 0;

  /**
   * @generated from field: neutral_diet.user.v1.Date date = 5;
   */
  date?: Date;

  constructor(data?: PartialMessage<FoodLogItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.user.v1.FoodLogItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "food_item_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "weight", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "carbon_footprint", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FoodLogItemResponse {
    return new FoodLogItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FoodLogItemResponse {
    return new FoodLogItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FoodLogItemResponse {
    return new FoodLogItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FoodLogItemResponse | PlainMessage<FoodLogItemResponse> | undefined, b: FoodLogItemResponse | PlainMessage<FoodLogItemResponse> | undefined): boolean {
    return proto3.util.equals(FoodLogItemResponse, a, b);
  }
}

