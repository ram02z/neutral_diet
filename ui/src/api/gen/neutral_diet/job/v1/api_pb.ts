// @generated by protoc-gen-es v0.5.0 with parameter "target=ts"
// @generated from file neutral_diet/job/v1/api.proto (package neutral_diet.job.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message neutral_diet.job.v1.SendGoalNotificationsRequest
 */
export class SendGoalNotificationsRequest extends Message<SendGoalNotificationsRequest> {
  constructor(data?: PartialMessage<SendGoalNotificationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.job.v1.SendGoalNotificationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendGoalNotificationsRequest {
    return new SendGoalNotificationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendGoalNotificationsRequest {
    return new SendGoalNotificationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendGoalNotificationsRequest {
    return new SendGoalNotificationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendGoalNotificationsRequest | PlainMessage<SendGoalNotificationsRequest> | undefined, b: SendGoalNotificationsRequest | PlainMessage<SendGoalNotificationsRequest> | undefined): boolean {
    return proto3.util.equals(SendGoalNotificationsRequest, a, b);
  }
}

/**
 * @generated from message neutral_diet.job.v1.SendGoalNotificationsResponse
 */
export class SendGoalNotificationsResponse extends Message<SendGoalNotificationsResponse> {
  constructor(data?: PartialMessage<SendGoalNotificationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.job.v1.SendGoalNotificationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendGoalNotificationsResponse {
    return new SendGoalNotificationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendGoalNotificationsResponse {
    return new SendGoalNotificationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendGoalNotificationsResponse {
    return new SendGoalNotificationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendGoalNotificationsResponse | PlainMessage<SendGoalNotificationsResponse> | undefined, b: SendGoalNotificationsResponse | PlainMessage<SendGoalNotificationsResponse> | undefined): boolean {
    return proto3.util.equals(SendGoalNotificationsResponse, a, b);
  }
}

/**
 * @generated from message neutral_diet.job.v1.MarkCompletedGoalsRequest
 */
export class MarkCompletedGoalsRequest extends Message<MarkCompletedGoalsRequest> {
  constructor(data?: PartialMessage<MarkCompletedGoalsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.job.v1.MarkCompletedGoalsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MarkCompletedGoalsRequest {
    return new MarkCompletedGoalsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MarkCompletedGoalsRequest {
    return new MarkCompletedGoalsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MarkCompletedGoalsRequest {
    return new MarkCompletedGoalsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MarkCompletedGoalsRequest | PlainMessage<MarkCompletedGoalsRequest> | undefined, b: MarkCompletedGoalsRequest | PlainMessage<MarkCompletedGoalsRequest> | undefined): boolean {
    return proto3.util.equals(MarkCompletedGoalsRequest, a, b);
  }
}

/**
 * @generated from message neutral_diet.job.v1.MarkCompletedGoalsResponse
 */
export class MarkCompletedGoalsResponse extends Message<MarkCompletedGoalsResponse> {
  constructor(data?: PartialMessage<MarkCompletedGoalsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.job.v1.MarkCompletedGoalsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MarkCompletedGoalsResponse {
    return new MarkCompletedGoalsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MarkCompletedGoalsResponse {
    return new MarkCompletedGoalsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MarkCompletedGoalsResponse {
    return new MarkCompletedGoalsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MarkCompletedGoalsResponse | PlainMessage<MarkCompletedGoalsResponse> | undefined, b: MarkCompletedGoalsResponse | PlainMessage<MarkCompletedGoalsResponse> | undefined): boolean {
    return proto3.util.equals(MarkCompletedGoalsResponse, a, b);
  }
}

