// @generated by protoc-gen-es v0.2.1 with parameter "target=ts"
// @generated from file neutral_diet/food/v1/food_item_log.proto (package neutral_diet.food.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message neutral_diet.food.v1.FoodItemLog
 */
export class FoodItemLog extends Message<FoodItemLog> {
  /**
   * @generated from field: string food_item_name = 1;
   */
  foodItemName = "";

  /**
   * @generated from field: int32 typology_id = 2;
   */
  typologyId = 0;

  /**
   * @generated from field: float weight = 3;
   */
  weight = 0;

  /**
   * @generated from field: float carbon_footprint = 4;
   */
  carbonFootprint = 0;

  constructor(data?: PartialMessage<FoodItemLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "neutral_diet.food.v1.FoodItemLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "food_item_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "typology_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "weight", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "carbon_footprint", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FoodItemLog {
    return new FoodItemLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FoodItemLog {
    return new FoodItemLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FoodItemLog {
    return new FoodItemLog().fromJsonString(jsonString, options);
  }

  static equals(a: FoodItemLog | PlainMessage<FoodItemLog> | undefined, b: FoodItemLog | PlainMessage<FoodItemLog> | undefined): boolean {
    return proto3.util.equals(FoodItemLog, a, b);
  }
}

