// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: region.sql

package db

import (
	"context"
)

const createRegion = `-- name: CreateRegion :exec
INSERT INTO region (name)
    VALUES ($1)
`

func (q *Queries) CreateRegion(ctx context.Context, name string) error {
	_, err := q.db.Exec(ctx, createRegion, name)
	return err
}

const listRegions = `-- name: ListRegions :many
SELECT
    name
FROM
    region
`

func (q *Queries) ListRegions(ctx context.Context) ([]string, error) {
	rows, err := q.db.Query(ctx, listRegions)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
