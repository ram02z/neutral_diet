// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: sub_typology.sql

package db

import (
	"context"
)

const createSubTypology = `-- name: CreateSubTypology :one
INSERT INTO sub_typology (name)
    VALUES ($1)
RETURNING
    id
`

func (q *Queries) CreateSubTypology(ctx context.Context, name string) (int32, error) {
	row := q.db.QueryRow(ctx, createSubTypology, name)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const listSubTypologies = `-- name: ListSubTypologies :many
SELECT id, name FROM sub_typology
`

func (q *Queries) ListSubTypologies(ctx context.Context) ([]SubTypology, error) {
	rows, err := q.db.Query(ctx, listSubTypologies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SubTypology
	for rows.Next() {
		var i SubTypology
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
