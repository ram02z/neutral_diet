// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: neutral_diet/user/v1/api.proto

package userv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/ram02z/neutral_diet/internal/gen/idl/neutral_diet/food/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddFoodItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodLogItem *FoodLogItemRequest `protobuf:"bytes,1,opt,name=food_log_item,json=foodLogItem,proto3" json:"food_log_item,omitempty"`
}

func (x *AddFoodItemRequest) Reset() {
	*x = AddFoodItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFoodItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFoodItemRequest) ProtoMessage() {}

func (x *AddFoodItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFoodItemRequest.ProtoReflect.Descriptor instead.
func (*AddFoodItemRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *AddFoodItemRequest) GetFoodLogItem() *FoodLogItemRequest {
	if x != nil {
		return x.FoodLogItem
	}
	return nil
}

type AddFoodItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarbonFootprint float64 `protobuf:"fixed64,2,opt,name=carbon_footprint,json=carbonFootprint,proto3" json:"carbon_footprint,omitempty"`
}

func (x *AddFoodItemResponse) Reset() {
	*x = AddFoodItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFoodItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFoodItemResponse) ProtoMessage() {}

func (x *AddFoodItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFoodItemResponse.ProtoReflect.Descriptor instead.
func (*AddFoodItemResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *AddFoodItemResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddFoodItemResponse) GetCarbonFootprint() float64 {
	if x != nil {
		return x.CarbonFootprint
	}
	return 0
}

type UpdateFoodItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity float64   `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit     Unit      `protobuf:"varint,3,opt,name=unit,proto3,enum=neutral_diet.user.v1.Unit" json:"unit,omitempty"`
	Region   v1.Region `protobuf:"varint,4,opt,name=region,proto3,enum=neutral_diet.food.v1.Region" json:"region,omitempty"`
	Meal     Meal      `protobuf:"varint,5,opt,name=meal,proto3,enum=neutral_diet.user.v1.Meal" json:"meal,omitempty"`
}

func (x *UpdateFoodItemRequest) Reset() {
	*x = UpdateFoodItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFoodItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFoodItemRequest) ProtoMessage() {}

func (x *UpdateFoodItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFoodItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateFoodItemRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateFoodItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFoodItemRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateFoodItemRequest) GetUnit() Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_UNIT_UNSPECIFIED
}

func (x *UpdateFoodItemRequest) GetRegion() v1.Region {
	if x != nil {
		return x.Region
	}
	return v1.Region(0)
}

func (x *UpdateFoodItemRequest) GetMeal() Meal {
	if x != nil {
		return x.Meal
	}
	return Meal_MEAL_UNSPECIFIED
}

type UpdateFoodItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarbonFootprint float64 `protobuf:"fixed64,1,opt,name=carbon_footprint,json=carbonFootprint,proto3" json:"carbon_footprint,omitempty"`
}

func (x *UpdateFoodItemResponse) Reset() {
	*x = UpdateFoodItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFoodItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFoodItemResponse) ProtoMessage() {}

func (x *UpdateFoodItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFoodItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateFoodItemResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateFoodItemResponse) GetCarbonFootprint() float64 {
	if x != nil {
		return x.CarbonFootprint
	}
	return 0
}

type DeleteFoodItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFoodItemRequest) Reset() {
	*x = DeleteFoodItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFoodItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFoodItemRequest) ProtoMessage() {}

func (x *DeleteFoodItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFoodItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteFoodItemRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFoodItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFoodItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFoodItemResponse) Reset() {
	*x = DeleteFoodItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFoodItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFoodItemResponse) ProtoMessage() {}

func (x *DeleteFoodItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFoodItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteFoodItemResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{5}
}

type GetFoodItemLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *Date `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetFoodItemLogRequest) Reset() {
	*x = GetFoodItemLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFoodItemLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFoodItemLogRequest) ProtoMessage() {}

func (x *GetFoodItemLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFoodItemLogRequest.ProtoReflect.Descriptor instead.
func (*GetFoodItemLogRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetFoodItemLogRequest) GetDate() *Date {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetFoodItemLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodItemLog []*FoodLogItemResponse `protobuf:"bytes,1,rep,name=food_item_log,json=foodItemLog,proto3" json:"food_item_log,omitempty"`
}

func (x *GetFoodItemLogResponse) Reset() {
	*x = GetFoodItemLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFoodItemLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFoodItemLogResponse) ProtoMessage() {}

func (x *GetFoodItemLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFoodItemLogResponse.ProtoReflect.Descriptor instead.
func (*GetFoodItemLogResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetFoodItemLogResponse) GetFoodItemLog() []*FoodLogItemResponse {
	if x != nil {
		return x.FoodItemLog
	}
	return nil
}

type GetFoodItemLogDaysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month int32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`
	Year  int32 `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetFoodItemLogDaysRequest) Reset() {
	*x = GetFoodItemLogDaysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFoodItemLogDaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFoodItemLogDaysRequest) ProtoMessage() {}

func (x *GetFoodItemLogDaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFoodItemLogDaysRequest.ProtoReflect.Descriptor instead.
func (*GetFoodItemLogDaysRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetFoodItemLogDaysRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *GetFoodItemLogDaysRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetFoodItemLogDaysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []int32 `protobuf:"varint,1,rep,packed,name=days,proto3" json:"days,omitempty"`
}

func (x *GetFoodItemLogDaysResponse) Reset() {
	*x = GetFoodItemLogDaysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFoodItemLogDaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFoodItemLogDaysResponse) ProtoMessage() {}

func (x *GetFoodItemLogDaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFoodItemLogDaysResponse.ProtoReflect.Descriptor instead.
func (*GetFoodItemLogDaysResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *GetFoodItemLogDaysResponse) GetDays() []int32 {
	if x != nil {
		return x.Days
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirebaseUid string `protobuf:"bytes,1,opt,name=firebase_uid,json=firebaseUid,proto3" json:"firebase_uid,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *CreateUserRequest) GetFirebaseUid() string {
	if x != nil {
		return x.FirebaseUid
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateUserResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{12}
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{13}
}

type UpdateUserSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSettings *UserSettings `protobuf:"bytes,1,opt,name=user_settings,json=userSettings,proto3" json:"user_settings,omitempty"`
}

func (x *UpdateUserSettingsRequest) Reset() {
	*x = UpdateUserSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSettingsRequest) ProtoMessage() {}

func (x *UpdateUserSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserSettingsRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateUserSettingsRequest) GetUserSettings() *UserSettings {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

type UpdateUserSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserSettingsResponse) Reset() {
	*x = UpdateUserSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSettingsResponse) ProtoMessage() {}

func (x *UpdateUserSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserSettingsResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{15}
}

type GetUserSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserSettingsRequest) Reset() {
	*x = GetUserSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSettingsRequest) ProtoMessage() {}

func (x *GetUserSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserSettingsRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{16}
}

type GetUserSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSettings *UserSettings `protobuf:"bytes,1,opt,name=user_settings,json=userSettings,proto3" json:"user_settings,omitempty"`
}

func (x *GetUserSettingsResponse) Reset() {
	*x = GetUserSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSettingsResponse) ProtoMessage() {}

func (x *GetUserSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetUserSettingsResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserSettingsResponse) GetUserSettings() *UserSettings {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

type GetUserInsightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserInsightsRequest) Reset() {
	*x = GetUserInsightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInsightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInsightsRequest) ProtoMessage() {}

func (x *GetUserInsightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInsightsRequest.ProtoReflect.Descriptor instead.
func (*GetUserInsightsRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{18}
}

type GetUserInsightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyUserAverage                              float64 `protobuf:"fixed64,1,opt,name=daily_user_average,json=dailyUserAverage,proto3" json:"daily_user_average,omitempty"`
	DailyAverageCarbonFootprintDietaryRequirement float64 `protobuf:"fixed64,2,opt,name=daily_average_carbon_footprint_dietary_requirement,json=dailyAverageCarbonFootprintDietaryRequirement,proto3" json:"daily_average_carbon_footprint_dietary_requirement,omitempty"`
	DailyAverageCarbonFootprintOverall            float64 `protobuf:"fixed64,3,opt,name=daily_average_carbon_footprint_overall,json=dailyAverageCarbonFootprintOverall,proto3" json:"daily_average_carbon_footprint_overall,omitempty"`
	StreakLen                                     int32   `protobuf:"varint,4,opt,name=streak_len,json=streakLen,proto3" json:"streak_len,omitempty"`
	IsStreakActive                                bool    `protobuf:"varint,5,opt,name=is_streak_active,json=isStreakActive,proto3" json:"is_streak_active,omitempty"`
}

func (x *GetUserInsightsResponse) Reset() {
	*x = GetUserInsightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInsightsResponse) ProtoMessage() {}

func (x *GetUserInsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInsightsResponse.ProtoReflect.Descriptor instead.
func (*GetUserInsightsResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserInsightsResponse) GetDailyUserAverage() float64 {
	if x != nil {
		return x.DailyUserAverage
	}
	return 0
}

func (x *GetUserInsightsResponse) GetDailyAverageCarbonFootprintDietaryRequirement() float64 {
	if x != nil {
		return x.DailyAverageCarbonFootprintDietaryRequirement
	}
	return 0
}

func (x *GetUserInsightsResponse) GetDailyAverageCarbonFootprintOverall() float64 {
	if x != nil {
		return x.DailyAverageCarbonFootprintOverall
	}
	return 0
}

func (x *GetUserInsightsResponse) GetStreakLen() int32 {
	if x != nil {
		return x.StreakLen
	}
	return 0
}

func (x *GetUserInsightsResponse) GetIsStreakActive() bool {
	if x != nil {
		return x.IsStreakActive
	}
	return false
}

type GetUserProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateRange *DateRange `protobuf:"bytes,1,opt,name=date_range,json=dateRange,proto3" json:"date_range,omitempty"`
}

func (x *GetUserProgressRequest) Reset() {
	*x = GetUserProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProgressRequest) ProtoMessage() {}

func (x *GetUserProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProgressRequest.ProtoReflect.Descriptor instead.
func (*GetUserProgressRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserProgressRequest) GetDateRange() *DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

type GetUserProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyProgressAll       map[string]float64 `protobuf:"bytes,1,rep,name=daily_progress_all,json=dailyProgressAll,proto3" json:"daily_progress_all,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	DailyProgressBreakfast map[string]float64 `protobuf:"bytes,2,rep,name=daily_progress_breakfast,json=dailyProgressBreakfast,proto3" json:"daily_progress_breakfast,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	DailyProgressLunch     map[string]float64 `protobuf:"bytes,3,rep,name=daily_progress_lunch,json=dailyProgressLunch,proto3" json:"daily_progress_lunch,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	DailyProgressDinner    map[string]float64 `protobuf:"bytes,4,rep,name=daily_progress_dinner,json=dailyProgressDinner,proto3" json:"daily_progress_dinner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	DailyProgressSnacks    map[string]float64 `protobuf:"bytes,5,rep,name=daily_progress_snacks,json=dailyProgressSnacks,proto3" json:"daily_progress_snacks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *GetUserProgressResponse) Reset() {
	*x = GetUserProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProgressResponse) ProtoMessage() {}

func (x *GetUserProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProgressResponse.ProtoReflect.Descriptor instead.
func (*GetUserProgressResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserProgressResponse) GetDailyProgressAll() map[string]float64 {
	if x != nil {
		return x.DailyProgressAll
	}
	return nil
}

func (x *GetUserProgressResponse) GetDailyProgressBreakfast() map[string]float64 {
	if x != nil {
		return x.DailyProgressBreakfast
	}
	return nil
}

func (x *GetUserProgressResponse) GetDailyProgressLunch() map[string]float64 {
	if x != nil {
		return x.DailyProgressLunch
	}
	return nil
}

func (x *GetUserProgressResponse) GetDailyProgressDinner() map[string]float64 {
	if x != nil {
		return x.DailyProgressDinner
	}
	return nil
}

func (x *GetUserProgressResponse) GetDailyProgressSnacks() map[string]float64 {
	if x != nil {
		return x.DailyProgressSnacks
	}
	return nil
}

type AddCarbonFootprintGoalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarbonFootprintGoal *CarbonFootprintGoalRequest `protobuf:"bytes,1,opt,name=carbon_footprint_goal,json=carbonFootprintGoal,proto3" json:"carbon_footprint_goal,omitempty"`
}

func (x *AddCarbonFootprintGoalRequest) Reset() {
	*x = AddCarbonFootprintGoalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCarbonFootprintGoalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCarbonFootprintGoalRequest) ProtoMessage() {}

func (x *AddCarbonFootprintGoalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCarbonFootprintGoalRequest.ProtoReflect.Descriptor instead.
func (*AddCarbonFootprintGoalRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{22}
}

func (x *AddCarbonFootprintGoalRequest) GetCarbonFootprintGoal() *CarbonFootprintGoalRequest {
	if x != nil {
		return x.CarbonFootprintGoal
	}
	return nil
}

type AddCarbonFootprintGoalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddCarbonFootprintGoalResponse) Reset() {
	*x = AddCarbonFootprintGoalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCarbonFootprintGoalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCarbonFootprintGoalResponse) ProtoMessage() {}

func (x *AddCarbonFootprintGoalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCarbonFootprintGoalResponse.ProtoReflect.Descriptor instead.
func (*AddCarbonFootprintGoalResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{23}
}

func (x *AddCarbonFootprintGoalResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCarbonFootprintGoalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Completed bool  `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *UpdateCarbonFootprintGoalRequest) Reset() {
	*x = UpdateCarbonFootprintGoalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarbonFootprintGoalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarbonFootprintGoalRequest) ProtoMessage() {}

func (x *UpdateCarbonFootprintGoalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarbonFootprintGoalRequest.ProtoReflect.Descriptor instead.
func (*UpdateCarbonFootprintGoalRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateCarbonFootprintGoalRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCarbonFootprintGoalRequest) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type UpdateCarbonFootprintGoalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCarbonFootprintGoalResponse) Reset() {
	*x = UpdateCarbonFootprintGoalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarbonFootprintGoalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarbonFootprintGoalResponse) ProtoMessage() {}

func (x *UpdateCarbonFootprintGoalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarbonFootprintGoalResponse.ProtoReflect.Descriptor instead.
func (*UpdateCarbonFootprintGoalResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{25}
}

type DeleteCarbonFootprintGoalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCarbonFootprintGoalRequest) Reset() {
	*x = DeleteCarbonFootprintGoalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarbonFootprintGoalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarbonFootprintGoalRequest) ProtoMessage() {}

func (x *DeleteCarbonFootprintGoalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarbonFootprintGoalRequest.ProtoReflect.Descriptor instead.
func (*DeleteCarbonFootprintGoalRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteCarbonFootprintGoalRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCarbonFootprintGoalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCarbonFootprintGoalResponse) Reset() {
	*x = DeleteCarbonFootprintGoalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarbonFootprintGoalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarbonFootprintGoalResponse) ProtoMessage() {}

func (x *DeleteCarbonFootprintGoalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarbonFootprintGoalResponse.ProtoReflect.Descriptor instead.
func (*DeleteCarbonFootprintGoalResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{27}
}

type GetCarbonFootprintGoalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCarbonFootprintGoalsRequest) Reset() {
	*x = GetCarbonFootprintGoalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCarbonFootprintGoalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarbonFootprintGoalsRequest) ProtoMessage() {}

func (x *GetCarbonFootprintGoalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarbonFootprintGoalsRequest.ProtoReflect.Descriptor instead.
func (*GetCarbonFootprintGoalsRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{28}
}

type GetCarbonFootprintGoalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Completed []*CarbonFootprintGoalResponse `protobuf:"bytes,1,rep,name=completed,proto3" json:"completed,omitempty"`
	Active    []*CarbonFootprintGoalResponse `protobuf:"bytes,2,rep,name=active,proto3" json:"active,omitempty"`
}

func (x *GetCarbonFootprintGoalsResponse) Reset() {
	*x = GetCarbonFootprintGoalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCarbonFootprintGoalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCarbonFootprintGoalsResponse) ProtoMessage() {}

func (x *GetCarbonFootprintGoalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCarbonFootprintGoalsResponse.ProtoReflect.Descriptor instead.
func (*GetCarbonFootprintGoalsResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{29}
}

func (x *GetCarbonFootprintGoalsResponse) GetCompleted() []*CarbonFootprintGoalResponse {
	if x != nil {
		return x.Completed
	}
	return nil
}

func (x *GetCarbonFootprintGoalsResponse) GetActive() []*CarbonFootprintGoalResponse {
	if x != nil {
		return x.Active
	}
	return nil
}

type UpdateUserFCMTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FcmToken string `protobuf:"bytes,1,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
}

func (x *UpdateUserFCMTokenRequest) Reset() {
	*x = UpdateUserFCMTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFCMTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFCMTokenRequest) ProtoMessage() {}

func (x *UpdateUserFCMTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFCMTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserFCMTokenRequest) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateUserFCMTokenRequest) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

type UpdateUserFCMTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserFCMTokenResponse) Reset() {
	*x = UpdateUserFCMTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neutral_diet_user_v1_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFCMTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFCMTokenResponse) ProtoMessage() {}

func (x *UpdateUserFCMTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neutral_diet_user_v1_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFCMTokenResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserFCMTokenResponse) Descriptor() ([]byte, []int) {
	return file_neutral_diet_user_v1_api_proto_rawDescGZIP(), []int{31}
}

var File_neutral_diet_user_v1_api_proto protoreflect.FileDescriptor

var file_neutral_diet_user_v1_api_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x65, 0x74, 0x2f, 0x66, 0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6e, 0x65, 0x75, 0x74, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64,
	0x69, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6c, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0d, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x6c, 0x6f,
	0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x50, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22,
	0xe2, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6e,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x34,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x04,
	0x6d, 0x65, 0x61, 0x6c, 0x22, 0x43, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e,
	0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f,
	0x67, 0x22, 0x5c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x0c, 0x28, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x1e, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x1a, 0x05, 0x18, 0x8f, 0x4e, 0x28, 0x01, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22,
	0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x22, 0x3f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x55,
	0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x51, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xcf, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x69, 0x0a,
	0x32, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f,
	0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x2d, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f,
	0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x26, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e,
	0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x22, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x4c, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0xea, 0x07, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x83,
	0x01, 0x0a, 0x18, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x66, 0x61, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x14, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x75, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x75, 0x6e, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x7a, 0x0a,
	0x15, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6e,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x7a, 0x0a, 0x15, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x6e, 0x61, 0x63,
	0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x6e, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x6e, 0x61, 0x63, 0x6b, 0x73, 0x1a, 0x43, 0x0a, 0x15, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x49, 0x0a, 0x1b, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x66, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x6e, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a,
	0x1d, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e,
	0x0a, 0x15, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x13, 0x63, 0x61, 0x72, 0x62, 0x6f,
	0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x22, 0x30,
	0x0a, 0x1e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x59, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e,
	0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3b, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e,
	0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a,
	0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f,
	0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x65,
	0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x43, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x63, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1c,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x43, 0x4d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x82, 0x0f, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x2e, 0x6e, 0x65,
	0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64,
	0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x2b, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f,
	0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x67, 0x12, 0x2b, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x79, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2f, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c,
	0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x79, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6e, 0x65,
	0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64,
	0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x2c, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x79, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2f, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x2c, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2c, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x85, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x33, 0x2e, 0x6e,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f,
	0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x36, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x36, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x12, 0x34, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x46, 0x6f,
	0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x43, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x2e, 0x6e,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x43,
	0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x43, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0xdf, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x08,
	0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6d, 0x30, 0x32, 0x7a, 0x2f, 0x6e, 0x65,
	0x75, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x3b, 0x75, 0x73, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x55, 0x58, 0xaa, 0x02, 0x13,
	0x4e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x44, 0x69, 0x65, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x4e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x44, 0x69, 0x65,
	0x74, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x4e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x44, 0x69, 0x65, 0x74, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x4e, 0x65,
	0x75, 0x74, 0x72, 0x61, 0x6c, 0x44, 0x69, 0x65, 0x74, 0x3a, 0x3a, 0x55, 0x73, 0x65, 0x72, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_neutral_diet_user_v1_api_proto_rawDescOnce sync.Once
	file_neutral_diet_user_v1_api_proto_rawDescData = file_neutral_diet_user_v1_api_proto_rawDesc
)

func file_neutral_diet_user_v1_api_proto_rawDescGZIP() []byte {
	file_neutral_diet_user_v1_api_proto_rawDescOnce.Do(func() {
		file_neutral_diet_user_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_neutral_diet_user_v1_api_proto_rawDescData)
	})
	return file_neutral_diet_user_v1_api_proto_rawDescData
}

var file_neutral_diet_user_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_neutral_diet_user_v1_api_proto_goTypes = []interface{}{
	(*AddFoodItemRequest)(nil),                // 0: neutral_diet.user.v1.AddFoodItemRequest
	(*AddFoodItemResponse)(nil),               // 1: neutral_diet.user.v1.AddFoodItemResponse
	(*UpdateFoodItemRequest)(nil),             // 2: neutral_diet.user.v1.UpdateFoodItemRequest
	(*UpdateFoodItemResponse)(nil),            // 3: neutral_diet.user.v1.UpdateFoodItemResponse
	(*DeleteFoodItemRequest)(nil),             // 4: neutral_diet.user.v1.DeleteFoodItemRequest
	(*DeleteFoodItemResponse)(nil),            // 5: neutral_diet.user.v1.DeleteFoodItemResponse
	(*GetFoodItemLogRequest)(nil),             // 6: neutral_diet.user.v1.GetFoodItemLogRequest
	(*GetFoodItemLogResponse)(nil),            // 7: neutral_diet.user.v1.GetFoodItemLogResponse
	(*GetFoodItemLogDaysRequest)(nil),         // 8: neutral_diet.user.v1.GetFoodItemLogDaysRequest
	(*GetFoodItemLogDaysResponse)(nil),        // 9: neutral_diet.user.v1.GetFoodItemLogDaysResponse
	(*CreateUserRequest)(nil),                 // 10: neutral_diet.user.v1.CreateUserRequest
	(*CreateUserResponse)(nil),                // 11: neutral_diet.user.v1.CreateUserResponse
	(*DeleteUserRequest)(nil),                 // 12: neutral_diet.user.v1.DeleteUserRequest
	(*DeleteUserResponse)(nil),                // 13: neutral_diet.user.v1.DeleteUserResponse
	(*UpdateUserSettingsRequest)(nil),         // 14: neutral_diet.user.v1.UpdateUserSettingsRequest
	(*UpdateUserSettingsResponse)(nil),        // 15: neutral_diet.user.v1.UpdateUserSettingsResponse
	(*GetUserSettingsRequest)(nil),            // 16: neutral_diet.user.v1.GetUserSettingsRequest
	(*GetUserSettingsResponse)(nil),           // 17: neutral_diet.user.v1.GetUserSettingsResponse
	(*GetUserInsightsRequest)(nil),            // 18: neutral_diet.user.v1.GetUserInsightsRequest
	(*GetUserInsightsResponse)(nil),           // 19: neutral_diet.user.v1.GetUserInsightsResponse
	(*GetUserProgressRequest)(nil),            // 20: neutral_diet.user.v1.GetUserProgressRequest
	(*GetUserProgressResponse)(nil),           // 21: neutral_diet.user.v1.GetUserProgressResponse
	(*AddCarbonFootprintGoalRequest)(nil),     // 22: neutral_diet.user.v1.AddCarbonFootprintGoalRequest
	(*AddCarbonFootprintGoalResponse)(nil),    // 23: neutral_diet.user.v1.AddCarbonFootprintGoalResponse
	(*UpdateCarbonFootprintGoalRequest)(nil),  // 24: neutral_diet.user.v1.UpdateCarbonFootprintGoalRequest
	(*UpdateCarbonFootprintGoalResponse)(nil), // 25: neutral_diet.user.v1.UpdateCarbonFootprintGoalResponse
	(*DeleteCarbonFootprintGoalRequest)(nil),  // 26: neutral_diet.user.v1.DeleteCarbonFootprintGoalRequest
	(*DeleteCarbonFootprintGoalResponse)(nil), // 27: neutral_diet.user.v1.DeleteCarbonFootprintGoalResponse
	(*GetCarbonFootprintGoalsRequest)(nil),    // 28: neutral_diet.user.v1.GetCarbonFootprintGoalsRequest
	(*GetCarbonFootprintGoalsResponse)(nil),   // 29: neutral_diet.user.v1.GetCarbonFootprintGoalsResponse
	(*UpdateUserFCMTokenRequest)(nil),         // 30: neutral_diet.user.v1.UpdateUserFCMTokenRequest
	(*UpdateUserFCMTokenResponse)(nil),        // 31: neutral_diet.user.v1.UpdateUserFCMTokenResponse
	nil,                                       // 32: neutral_diet.user.v1.GetUserProgressResponse.DailyProgressAllEntry
	nil,                                       // 33: neutral_diet.user.v1.GetUserProgressResponse.DailyProgressBreakfastEntry
	nil,                                       // 34: neutral_diet.user.v1.GetUserProgressResponse.DailyProgressLunchEntry
	nil,                                       // 35: neutral_diet.user.v1.GetUserProgressResponse.DailyProgressDinnerEntry
	nil,                                       // 36: neutral_diet.user.v1.GetUserProgressResponse.DailyProgressSnacksEntry
	(*FoodLogItemRequest)(nil),                // 37: neutral_diet.user.v1.FoodLogItemRequest
	(Unit)(0),                                 // 38: neutral_diet.user.v1.Unit
	(v1.Region)(0),                            // 39: neutral_diet.food.v1.Region
	(Meal)(0),                                 // 40: neutral_diet.user.v1.Meal
	(*Date)(nil),                              // 41: neutral_diet.user.v1.Date
	(*FoodLogItemResponse)(nil),               // 42: neutral_diet.user.v1.FoodLogItemResponse
	(*UserSettings)(nil),                      // 43: neutral_diet.user.v1.UserSettings
	(*DateRange)(nil),                         // 44: neutral_diet.user.v1.DateRange
	(*CarbonFootprintGoalRequest)(nil),        // 45: neutral_diet.user.v1.CarbonFootprintGoalRequest
	(*CarbonFootprintGoalResponse)(nil),       // 46: neutral_diet.user.v1.CarbonFootprintGoalResponse
}
var file_neutral_diet_user_v1_api_proto_depIdxs = []int32{
	37, // 0: neutral_diet.user.v1.AddFoodItemRequest.food_log_item:type_name -> neutral_diet.user.v1.FoodLogItemRequest
	38, // 1: neutral_diet.user.v1.UpdateFoodItemRequest.unit:type_name -> neutral_diet.user.v1.Unit
	39, // 2: neutral_diet.user.v1.UpdateFoodItemRequest.region:type_name -> neutral_diet.food.v1.Region
	40, // 3: neutral_diet.user.v1.UpdateFoodItemRequest.meal:type_name -> neutral_diet.user.v1.Meal
	41, // 4: neutral_diet.user.v1.GetFoodItemLogRequest.date:type_name -> neutral_diet.user.v1.Date
	42, // 5: neutral_diet.user.v1.GetFoodItemLogResponse.food_item_log:type_name -> neutral_diet.user.v1.FoodLogItemResponse
	43, // 6: neutral_diet.user.v1.UpdateUserSettingsRequest.user_settings:type_name -> neutral_diet.user.v1.UserSettings
	43, // 7: neutral_diet.user.v1.GetUserSettingsResponse.user_settings:type_name -> neutral_diet.user.v1.UserSettings
	44, // 8: neutral_diet.user.v1.GetUserProgressRequest.date_range:type_name -> neutral_diet.user.v1.DateRange
	32, // 9: neutral_diet.user.v1.GetUserProgressResponse.daily_progress_all:type_name -> neutral_diet.user.v1.GetUserProgressResponse.DailyProgressAllEntry
	33, // 10: neutral_diet.user.v1.GetUserProgressResponse.daily_progress_breakfast:type_name -> neutral_diet.user.v1.GetUserProgressResponse.DailyProgressBreakfastEntry
	34, // 11: neutral_diet.user.v1.GetUserProgressResponse.daily_progress_lunch:type_name -> neutral_diet.user.v1.GetUserProgressResponse.DailyProgressLunchEntry
	35, // 12: neutral_diet.user.v1.GetUserProgressResponse.daily_progress_dinner:type_name -> neutral_diet.user.v1.GetUserProgressResponse.DailyProgressDinnerEntry
	36, // 13: neutral_diet.user.v1.GetUserProgressResponse.daily_progress_snacks:type_name -> neutral_diet.user.v1.GetUserProgressResponse.DailyProgressSnacksEntry
	45, // 14: neutral_diet.user.v1.AddCarbonFootprintGoalRequest.carbon_footprint_goal:type_name -> neutral_diet.user.v1.CarbonFootprintGoalRequest
	46, // 15: neutral_diet.user.v1.GetCarbonFootprintGoalsResponse.completed:type_name -> neutral_diet.user.v1.CarbonFootprintGoalResponse
	46, // 16: neutral_diet.user.v1.GetCarbonFootprintGoalsResponse.active:type_name -> neutral_diet.user.v1.CarbonFootprintGoalResponse
	0,  // 17: neutral_diet.user.v1.UserService.AddFoodItem:input_type -> neutral_diet.user.v1.AddFoodItemRequest
	2,  // 18: neutral_diet.user.v1.UserService.UpdateFoodItem:input_type -> neutral_diet.user.v1.UpdateFoodItemRequest
	4,  // 19: neutral_diet.user.v1.UserService.DeleteFoodItem:input_type -> neutral_diet.user.v1.DeleteFoodItemRequest
	6,  // 20: neutral_diet.user.v1.UserService.GetFoodItemLog:input_type -> neutral_diet.user.v1.GetFoodItemLogRequest
	8,  // 21: neutral_diet.user.v1.UserService.GetFoodItemLogDays:input_type -> neutral_diet.user.v1.GetFoodItemLogDaysRequest
	10, // 22: neutral_diet.user.v1.UserService.CreateUser:input_type -> neutral_diet.user.v1.CreateUserRequest
	12, // 23: neutral_diet.user.v1.UserService.DeleteUser:input_type -> neutral_diet.user.v1.DeleteUserRequest
	16, // 24: neutral_diet.user.v1.UserService.GetUserSettings:input_type -> neutral_diet.user.v1.GetUserSettingsRequest
	14, // 25: neutral_diet.user.v1.UserService.UpdateUserSettings:input_type -> neutral_diet.user.v1.UpdateUserSettingsRequest
	18, // 26: neutral_diet.user.v1.UserService.GetUserInsights:input_type -> neutral_diet.user.v1.GetUserInsightsRequest
	20, // 27: neutral_diet.user.v1.UserService.GetUserProgress:input_type -> neutral_diet.user.v1.GetUserProgressRequest
	22, // 28: neutral_diet.user.v1.UserService.AddCarbonFootprintGoal:input_type -> neutral_diet.user.v1.AddCarbonFootprintGoalRequest
	24, // 29: neutral_diet.user.v1.UserService.UpdateCarbonFootprintGoal:input_type -> neutral_diet.user.v1.UpdateCarbonFootprintGoalRequest
	26, // 30: neutral_diet.user.v1.UserService.DeleteCarbonFootprintGoal:input_type -> neutral_diet.user.v1.DeleteCarbonFootprintGoalRequest
	28, // 31: neutral_diet.user.v1.UserService.GetCarbonFootprintGoals:input_type -> neutral_diet.user.v1.GetCarbonFootprintGoalsRequest
	30, // 32: neutral_diet.user.v1.UserService.UpdateUserFCMToken:input_type -> neutral_diet.user.v1.UpdateUserFCMTokenRequest
	1,  // 33: neutral_diet.user.v1.UserService.AddFoodItem:output_type -> neutral_diet.user.v1.AddFoodItemResponse
	3,  // 34: neutral_diet.user.v1.UserService.UpdateFoodItem:output_type -> neutral_diet.user.v1.UpdateFoodItemResponse
	5,  // 35: neutral_diet.user.v1.UserService.DeleteFoodItem:output_type -> neutral_diet.user.v1.DeleteFoodItemResponse
	7,  // 36: neutral_diet.user.v1.UserService.GetFoodItemLog:output_type -> neutral_diet.user.v1.GetFoodItemLogResponse
	9,  // 37: neutral_diet.user.v1.UserService.GetFoodItemLogDays:output_type -> neutral_diet.user.v1.GetFoodItemLogDaysResponse
	11, // 38: neutral_diet.user.v1.UserService.CreateUser:output_type -> neutral_diet.user.v1.CreateUserResponse
	13, // 39: neutral_diet.user.v1.UserService.DeleteUser:output_type -> neutral_diet.user.v1.DeleteUserResponse
	17, // 40: neutral_diet.user.v1.UserService.GetUserSettings:output_type -> neutral_diet.user.v1.GetUserSettingsResponse
	15, // 41: neutral_diet.user.v1.UserService.UpdateUserSettings:output_type -> neutral_diet.user.v1.UpdateUserSettingsResponse
	19, // 42: neutral_diet.user.v1.UserService.GetUserInsights:output_type -> neutral_diet.user.v1.GetUserInsightsResponse
	21, // 43: neutral_diet.user.v1.UserService.GetUserProgress:output_type -> neutral_diet.user.v1.GetUserProgressResponse
	23, // 44: neutral_diet.user.v1.UserService.AddCarbonFootprintGoal:output_type -> neutral_diet.user.v1.AddCarbonFootprintGoalResponse
	25, // 45: neutral_diet.user.v1.UserService.UpdateCarbonFootprintGoal:output_type -> neutral_diet.user.v1.UpdateCarbonFootprintGoalResponse
	27, // 46: neutral_diet.user.v1.UserService.DeleteCarbonFootprintGoal:output_type -> neutral_diet.user.v1.DeleteCarbonFootprintGoalResponse
	29, // 47: neutral_diet.user.v1.UserService.GetCarbonFootprintGoals:output_type -> neutral_diet.user.v1.GetCarbonFootprintGoalsResponse
	31, // 48: neutral_diet.user.v1.UserService.UpdateUserFCMToken:output_type -> neutral_diet.user.v1.UpdateUserFCMTokenResponse
	33, // [33:49] is the sub-list for method output_type
	17, // [17:33] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_neutral_diet_user_v1_api_proto_init() }
func file_neutral_diet_user_v1_api_proto_init() {
	if File_neutral_diet_user_v1_api_proto != nil {
		return
	}
	file_neutral_diet_user_v1_date_proto_init()
	file_neutral_diet_user_v1_food_item_log_proto_init()
	file_neutral_diet_user_v1_goal_proto_init()
	file_neutral_diet_user_v1_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_neutral_diet_user_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFoodItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFoodItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFoodItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFoodItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFoodItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFoodItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFoodItemLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFoodItemLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFoodItemLogDaysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFoodItemLogDaysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInsightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInsightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCarbonFootprintGoalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCarbonFootprintGoalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarbonFootprintGoalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarbonFootprintGoalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarbonFootprintGoalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarbonFootprintGoalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCarbonFootprintGoalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCarbonFootprintGoalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFCMTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neutral_diet_user_v1_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFCMTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_neutral_diet_user_v1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_neutral_diet_user_v1_api_proto_goTypes,
		DependencyIndexes: file_neutral_diet_user_v1_api_proto_depIdxs,
		MessageInfos:      file_neutral_diet_user_v1_api_proto_msgTypes,
	}.Build()
	File_neutral_diet_user_v1_api_proto = out.File
	file_neutral_diet_user_v1_api_proto_rawDesc = nil
	file_neutral_diet_user_v1_api_proto_goTypes = nil
	file_neutral_diet_user_v1_api_proto_depIdxs = nil
}
