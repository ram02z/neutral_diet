syntax = "proto3";

package neutral_diet.food.v1;

import "neutral_diet/food/v1/food_item.proto";
import "neutral_diet/food/v1/food_item_log.proto";
import "neutral_diet/food/v1/life_cycle.proto";
import "neutral_diet/food/v1/region.proto";
import "neutral_diet/food/v1/source.proto";
import "neutral_diet/food/v1/sub_typology.proto";
import "neutral_diet/food/v1/typology.proto";
import "validate/validate.proto";

message CreateLifeCycleRequest {
  LifeCycle life_cycle = 1 [(validate.rules).message.required = true];
}

message CreateLifeCycleResponse {
  int32 id = 1;
}

message CreateFoodItemRequest {
  FoodItem food_item = 1 [(validate.rules).message.required = true];
}

message CreateFoodItemResponse {
  int32 id = 1;
}

message CreateTypologyRequest {
  Typology typology = 1 [(validate.rules).message.required = true];
}

message CreateTypologyResponse {
  int32 id = 1;
}

message CreateSubTypologyRequest {
  SubTypology sub_typology = 1 [(validate.rules).message.required = true];
}

message CreateSubTypologyResponse {
  int32 id = 1;
}

message CreateSourceRequest {
  Source source = 1 [(validate.rules).message.required = true];
}

message CreateSourceResponse {
  int32 id = 1;
}

message CreateRegionRequest {
  Region region = 1 [(validate.rules).message.required = true];
}

message CreateRegionResponse {}

/* TODO: allow filtering by region */
message ListAggregateFoodItemsRequest {}

message ListAggregateFoodItemsResponse {
  repeated AggregateFoodItem food_items = 1;
}

message AddFoodItemRequest {
  string firebase_uid = 1 [(validate.rules).string.min_len = 1];
  FoodLogItem food_log_item = 2 [(validate.rules).message.required = true];
}

message AddFoodItemResponse {
  int32 id = 1;
}

message CreateUserRequest {
  string firebase_uid = 1 [(validate.rules).string.min_len = 1];
}

message CreateUserResponse {
  int32 id = 1;
}

service FoodService {
  rpc CreateLifeCycle(CreateLifeCycleRequest) returns (CreateLifeCycleResponse) {}
  rpc CreateFoodItem(CreateFoodItemRequest) returns (CreateFoodItemResponse) {}
  rpc CreateTypology(CreateTypologyRequest) returns (CreateTypologyResponse) {}
  rpc CreateSubTypology(CreateSubTypologyRequest) returns (CreateSubTypologyResponse) {}
  rpc CreateSource(CreateSourceRequest) returns (CreateSourceResponse) {}
  rpc CreateRegion(CreateRegionRequest) returns (CreateRegionResponse) {}
  rpc ListAggregateFoodItems(ListAggregateFoodItemsRequest) returns (ListAggregateFoodItemsResponse) {}
  rpc AddFoodItem(AddFoodItemRequest) returns (AddFoodItemResponse) {}
  /* TODO: move to own service */
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
}
